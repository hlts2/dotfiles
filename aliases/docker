container_name=hlts2-dev
image_name=hlts2/dev:latest

_devrun() {
    shift
    opts="\
        --cap-add=ALL \
        --privileged=true \
        --name $container_name \
        -v /var/run/docker.sock:/var/run/docker.sock \
        -v $HOME/.gitconfig:/root/.gitconfig \
        -v $HOME/.gitattributes:/root/.gitattributes \
        -v $HOME/.gitcommit-template:/root/.gitcommit-template \
        -v $HOME/.gitignore:/root/.gitignore \
        -v $HOME/.tmux.conf:/root/.tmux.conf \
        -v $HOME/.zshrc:/root/.zshrc \
        -v $HOME/.aliases/docker:/root/.aliases/docker \
        -v $HOME/.config/nvim/init.vim:/root/.config/nvim/init.vim \
        -v $HOME/.config/nvim/coc-settings.json:/root/.config/nvim/coc-settings.json \
        -v $HOME/.gitconfig.local:/root/.gitconfig.local \
        -v $HOME/.git-credentials:/root/.git-credentials:ro \
        -v $HOME/.kube:/root/.kube \
        -v $HOME/tmp:/root/tmp \
        -v $HOME/workspace:/root/workspace \
        -v $HOME/Downloads:/root/Downloads \
        -v $HOME/.zsh_history:/root/.zsh_history \
        -v $HOME/go:/root/go \
        $@"

    case "$(uname -s)" in
        Darwin)
            opts="$opts -v $HOME/.ssh:/root/.ssh:ro"
            ;;
        Linux)
            #opts="--net=host $opts"
            #if [[ -n "${SSH_AUTH_SOCK}" ]]; then
            #    opts="$opts -v ${SSH_AUTH_SOCK}:/ssh-agent -e SSH_AUTH_SOCK=/ssh-agent"
            #fi
            ;;
        *)
            ;;
        esac

    run_cmd="docker run $opts -dit $image_name"
    echo $run_cmd | sed -e 's/ \+/ /g'
    eval $run_cmd
}

alias devrun='_devrun'
alias devin="docker exec -it hlts2-dev /bin/zsh"
alias devkill="docker stop $container_name && docker rm -f $container_name"
